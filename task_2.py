"""
Задание 2. Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


try:
    n = int(input('Введите число: '))
except ValueError:
    print("Вы ввели не число!")
else:
    def my_func(number_1, count_1=0, count_2=0):
        if number_1 == 0:
            return print(f'Количество четных и нечетных цифр в числе равно: ({count_1}, {count_2})')
        else:
            m = number_1 % 10
            number_1 //= 10
            if m % 2 == 0:
                count_1 += 1
                return my_func(number_1, count_1, count_2)
            if m % 2 != 0:
                count_2 += 1
                return my_func(number_1, count_1, count_2)
    my_func(n)
